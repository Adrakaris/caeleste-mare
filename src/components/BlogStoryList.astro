---
import "../styles/components/blogstorylist.scss";
import CBox from "./CBox.astro";
import { sortPostsByDateDesc } from "../utils/functions";
import ColourBand from "./ColourBand.astro";

const matches = import.meta.glob("../pages/stories/*.mdx", { eager: true });
const posts = Object.values(matches);
const sortedPosts = sortPostsByDateDesc(posts);
const postData = sortedPosts.map((post: any) => ({
    url: post.url,
    title: post.frontmatter.title,
    date: new Date(post.frontmatter.date).toISOString().slice(0, 10),
    updateddate: post.frontmatter.updateddate
        ? new Date(post.frontmatter.updateddate).toISOString().slice(0, 10)
        : undefined,
    description: post.frontmatter.description,
    tags: post.frontmatter.tags,
})); // this is cached at build time, will be used for filtering
---

<ColourBand>
    <h2>Stories</h2>
    <input id="se" class="search" type="text" placeholder="Search..." />
    <button id="sb" type="submit" class="search">Go</button>
    <div class="cbox">
        <div class="cfive">
            <button id="tall" class="search">#all</button>
            <button id="tlore" class="search">#legends</button>
            <button id="thistory" class="search">#records</button>
            <button id="tmisc" class="search">#misc</button>
        </div>
    </div>
</ColourBand>
<CBox>
    <div id="searchResults"></div>

    <script is:inline define:vars={{postData}} type="module">
        const searchInput = document.getElementById("se");
        const searchButton = document.getElementById("sb");
        const allButton = document.getElementById("tall");
        const loreButton = document.getElementById("tlore");
        const historyButton = document.getElementById("thistory");
        const miscButton = document.getElementById("tmisc");
        const resultsDiv = document.getElementById("searchResults");

        function renderPosts(posts) {
            resultsDiv.innerHTML = "";
            posts.forEach((post) => {
                const wrapper = document.createElement("div");
                wrapper.innerHTML = `
            <a href="${post.url}">
            <h2 style="margin-bottom: 0;">${post.title}</h2>
            </a>
            <p>
            <b>${post.date}.</b>
            ${
                post.updateddate
                    ? `<span>(Updated ${post.updateddate})</span>`
                    : ""
            }
            ${post.description}
            </p>
            ${
                post.tags && post.tags.length
                    ? `<p class="green">${post.tags.map((t) => "#" + t).join(" ")}</p>`
                    : ""
            }
        `;
                resultsDiv.appendChild(wrapper);
            });
        }

        // initial render
        renderPosts(postData);

        // filters
        allButton.addEventListener("click", () => renderPosts(postData));
        loreButton.addEventListener("click", () =>
            renderPosts(postData.filter((p) => p.tags?.includes("legends"))),
        );
        historyButton.addEventListener("click", () =>
            renderPosts(postData.filter((p) => p.tags?.includes("records"))),
        );
        miscButton.addEventListener("click", () =>
            renderPosts(postData.filter((p) => p.tags?.includes("misc"))),
        );

        // search
        searchButton.addEventListener("click", () => {
            const term = searchInput.value.trim().toLowerCase();
            if (!term) {
                renderPosts(postData);
                return;
            }
            renderPosts(
                postData.filter(
                    (p) =>
                        p.title.toLowerCase().includes(term) ||
                        p.description.toLowerCase().includes(term),
                ),
            );
        });
    </script>
</CBox>
